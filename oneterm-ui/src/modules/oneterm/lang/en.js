const oneterm_en = {
  connect: 'Connect',
  session: 'Session',
  connectedAssets: 'Connected Assets',
  connectedSession: 'Connected Session',
  totalAssets: 'Total Assets',
  connectedUsers: 'Connected Users',
  account: 'Account',
  accountAuthorization: 'Account Authorization',
  gateway: 'Gateway',
  protocol: 'Protocol',
  asset: 'Asset',
  switchAccount: 'Switch Account',
  name: 'Name',
  baseInfo: 'Base Info',
  accessRestrictions: 'Access Restrictions',
  comment: 'Comment',
  node: 'Node',
  catalog: 'Catalog',
  cmdbType: 'CMDB Type',
  fieldMap: 'Field Map',
  field: 'Field',
  filter: 'Filter',
  command: 'Command',
  host: 'Host',
  port: 'Port',
  accountType: 'Account Type',
  password: 'Password',
  secretkey: 'Secret Key',
  publicKey: 'Public Key',
  phrase: 'Phrase',
  createPublicKey: 'Create Public Key',
  editPublicKey: 'Edit Public Key',
  assetCount: 'Asset Count',
  macAddress: 'Mac Address',
  menu: {
    oneterm: 'OneTerm',
    workStation: 'Work Station',
    assetManagement: 'Asset Management',
    assets: 'Assets',
    gateways: 'Gateways',
    accounts: 'Accounts',
    security: 'Security',
    sessionAuditing: 'Session Auditing',
    onlineSession: 'Online Session',
    offlineSession: 'Offline Session',
    logAuditing: 'Log Auditing',
    loginLog: 'Login Log',
    operationLog: 'Operation Log',
    fileLog: 'File Log',
    publicKey: 'Public Key',
    commandRecord: 'Command Record',
    auditCentre: 'Audit Centre',
    systemSettings: 'System Settings',
    terminal: 'Terminal',
    replay: 'Replay',
    share: 'Share'
  },
  dashboard: {
    currentConnect: 'Current Connect',
    currentSession: 'Current Session',
    assetsInOperation: 'Assets in Operation',
    currentUsers: 'Current Users',
    currentGateways: 'Current Gateways',
    assetActive: 'Active Assets',
    assetType: 'Asset Type',
    loginAccount: 'Login Account',
    userRank: 'User Rank',
    userRankTimes: 'times',
    lastDay: 'Last day',
    lastWeek: 'Last Week',
    lastMonth: 'Last Month',
  },
  workStation: {
    recentSession: 'Recent Session',
    myAsset: 'My Assets',
    personalInfo: 'Personal Info',
    loginTime: 'Login Time',
    fullScreen: 'Full Screen',
    exitFullScreen: 'Exit Full Screen',
    pageUnloadMessage: 'Are you sure you want to leave the page?',
    batchExecution: 'Batch Execution',
    chooseAssets: 'Choose Assets',
    batchExecutionPlaceholder: 'Please input the command, press Enter to execute'
  },
  sessionTable: {
    target: 'Target',
    clientIp: 'Client IP',
    cmdCount: 'Command Count',
    duration: 'Duration',
    monitor: 'monitor',
    disconnect: 'disconnect',
    replay: 'replay',
    confirmDisconnect: 'Confirm to disconnect?',
    cmd: 'Command',
    level: 'Risk Level',
    execute_at: 'Execute At',
    result: 'Result',
    disconnectSuccess: 'Disconnect successfully',
    hour: 'h',
    minute: 'm',
    second: 's',
    loginMessage: 'No target to login'
  },
  assetList: {
    grantUser: 'Granted User',
    assetTree: 'Asset Tree',
    createCatalog: 'Create Catalog',
    editCatalog: 'Edit Catalog',
    deleteCatalog: 'Delete Catalog',
    grantCatalog: 'Grant Catalog',
    ip: 'IP',
    catalogName: 'Catalog Name',
    connectable: 'Connectable',
    connected: 'Connected',
    error: 'Error',
    online: 'Online',
    offline: 'Offline',
    cmdbSync: 'CMDB Synchronization',
    sync: 'Enable Synchronization',
    frequency: 'Frequency',
    time: 'Time',
    timeTip: 'You can choose to allow/prohibit access during certain time periods. If not selected, no restrictions will be imposed.',
    effectiveDate: 'Effective Date',
    commandIntercept: 'Command Intercept',
    allowAccess: 'Allow Access',
    prohibitAccess: 'Prohibit Access',
    weektime: 'week/time',
    selectedTime: 'Selected Time',
    drag: 'Drag the mouse to select time',
    assetList: 'Asset List',
    createAsset: 'Create Asset',
    editAsset: 'Edit Asset',
    addAccount: 'Create Account',
    editProtocol: 'Edit Protocol',
    createGateway: 'Create Gateway',
    editGateway: 'Edit Gateway',
    gatewayName: 'Gateway Name',
    createAccount: 'Create Account',
    editAccount: 'Edit Account',
    basicSettings: 'Basic Settings',
    gatewayTip: 'The gateway function solves the problem of some environments not being able to connect directly, and connecting will use the gateway as a springboard to connect to the target asset',
    gatewayAccountTip: 'Account used to log in to assets',
    gatewaySecretkeyTip: 'Secret key, such as: \n-----BEGIN RSA PRIVATE KEY-----\n...\n-----END RSA PRIVATE KEY-----',
    gatewayPhraseTip: 'Optional, the encryption string used when generating the key(passphrase)',
    publicKeyTip: 'Password-free authentication for command terminals to log into the SSH service of the bastion, i.e. logging in on the corresponding machine without entering an account password',
    protocolPlaceholder: 'port, default 22',
    createTempLink: 'Create Temporary Link',
    tempLink: 'Temporary Link',
    tempLinkList: 'Temporary Link List',
    account: 'Account',
    validTime: 'Valid Time',
    times: 'Times',
    fixed: 'Fixed',
    times2: 'times',
    any: 'Any',
    link: 'Link',
    grantNode1: 'Grant Node',
    grantAsset: 'Grant Asset',
    grantAccount: 'Grant Account',
    grantLogin: 'Grant Login',
    grantUserOrDep: 'Grant User/Department',
    grantRole: 'Grant Role',
    createSubCatalog: 'Create Sub Catalog',
    assetSearchTip: 'Search in Asset',
    basic: 'Basic',
    database: 'Database'
  },
  log: {
    time: 'Time',
    type: 'Resource Type',
    param: 'Param',
    before: 'Before',
    after: 'After',
    fileName: 'File Name',
    filePath: 'File Path',
    account: 'Account',
    download: 'Download',
    upload: 'Upload'
  },
  guacamole: {
    play: 'click to play',
    speed1: '1x speed',
    speed2: '1.25x speed',
    speed3: '1.5x speed',
    speed4: '2x speed',
    pause: 'Pause',
    idle: 'Initializing...',
    connecting: 'Connecting...',
    waiting: 'Waiting...',
    connected: 'Connected',
    disconnect: 'Disconnect',
    clipboard: 'Clipboard'
  },
  systemSettings: {
    commandIntercept: 'Command Intercept',
    terminalControl: 'Terminal Control',
    quickCommand: 'Quick Command',
    terminalDisplay: 'Terminal Display',
    publicKey: 'Public Key',
    publicKeyTip: 'Password-free authentication for command terminals to log into the SSH service of the bastion',
    storageConfig: 'Storage Config'
  },
  commandIntercept: {
    enable: 'Enable',
    regexp: 'RegExp',
    createCommand: 'Create Command',
    editCommand: 'Edit Command',
  },
  terminalControl: {
    timeout: 'Maximum session free time',
    allowCopy: 'Allow Copy',
    allowPaste: 'Allow Paste',
    copyTip: 'Copy: The local device can get the contents of the clipboard text in the remote desktop in real time.',
    pasteTip: 'Paste: Remote Desktop can get the content of the text currently copied by the local device via the clipboard.'
  },
  terminalDisplay: {
    fontSetting: 'Font Setting',
    displaySetting: 'Display Setting',
    themeSetting: 'Theme Setting',
    fontFamily: 'Font Family',
    fontSize: 'Font Size',
    lineHeight: 'Line Height',
    letterSpacing: 'Letter Spacing(px)',
    cursorStyle: 'Cursor Style',
    remoteDesktopResolution: 'Remote Desktop Resolution',
    resolution: 'Resolution',
    auto: 'Auto',
    custom: 'Custom',
    width: 'Width',
    height: 'Height'
  },
  quickCommand: {
    name: 'Quick Command',
    createCommand: 'Create Command',
    editCommand: 'Edit Command',
    use: 'Use'
  },
  fileManagement: {
    name: 'File Management',
    directoryInputPlaceholder: 'Please input the file directory',
    backToPreviousLevel: 'Back To Previous Level',
    showHiddenFiles: 'Show Hidden Files',
    hideHiddenFiles: 'Hide Hidden Files',
    path: 'Path',
    size: 'Size',
    lastModified: 'Last Modified',
    permissions: 'Permissions',
    uploadFile: 'Upload File',
    batchDownloadFiles: 'Batch Download Files',
    uploadFileTip1: 'click or drag {name} ',
    uploadFileTip2: 'to upload',
    uploadProgress: 'Upload Progress',
    uploadTypeLabel: 'Select Upload Type',
    file: 'File',
    folder: 'Folder',
    uploadFailed: 'Upload Failed',
    uploadSuccess: 'Upload Success',
    transferToServer: 'Transfer To Server',
    transferToTargetMachine: 'Transfer To Target Machine'
  },
  storageConfig: {
    name: 'Storage Config',
    sessionRecording: 'Session Recording',
    isPrimary: 'Is Primary',
    priority: 'Priority',
    healthStatus: 'Health Status',
    createConfig: 'Create Config',
    editConfig: 'Edit Config',
    local: 'Local',
    isEnable: 'Is Enable',
    retentionDays: 'Retention Days',
    archiveDays: 'Archive Days',
    isCleanupEnabled: 'Is Cleanup Enabled',
    isArchiveEnabled: 'Is Archive Enabled',
    storageBasePath: 'Storage Base Path',
    pathStrategy: 'Path Strategy',
    minIOEndpoint: 'MinIO Endpoint',
    accessKeyID: 'Access Key ID',
    secretAccessKey: 'Secret Access Key',
    accessKeySecret: 'Access Key Secret',
    bucketName: 'Bucket Name',
    isUseSSL: 'Is Use SSL',
    AWSRegion: 'AWS Region',
    endpoint: 'Endpoint',
    OSSEndpoint: 'OSS Endpoint',
    COSRegion: 'COS Region',
    secretID: 'Secret ID',
    secretKey: 'Secret Key',
    appID: 'App ID',
    accountName: 'Account Name',
    accountKey: 'Account Key',
    containerName: 'Container Name',
    endpointSuffix: 'Endpoint Suffix',
    OBSEndpoint: 'OBS Endpoint',
    OOSEndPoint: 'OOS EndPoint',
    region: 'Region',
    testConnection: 'Test Connection',
    connectionSuccess: 'Connection Success',
    normal: 'Normal',
    abnormal: 'Abnormal',
    basicConfig: 'Basic Config',
    advancedConfig: 'Advanced Config',
    advancedConfigTip: 'Configure the detailed parameters and strategies for storage',
    confirmEnable: 'Confirm toggle enable?',
    confirmPrimaryStorage: 'Confirm switching primary storage'
  }
}
export default oneterm_en
